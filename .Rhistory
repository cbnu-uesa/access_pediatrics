mutate(dlv_tm_spar = (mean_dlv_tm / mean(mean_dlv_tm, na.rm=TRUE))-1)
access_dong <- left_join(access_dong, data_dong, by = c("ADM_CD")) %>%
mutate(mean_dlv_tm = as.numeric(mean_dlv_tm)) %>%
mutate(dlv_tm_spar = (mean_dlv_tm / mean(mean_dlv_tm, na.rm=TRUE))-1)
library(tmap)
tm_shape(access_dong) +
tm_fill(col = "dlv_tm_spar", style = "fixed", n = 6,
breaks = c(-Inf, -0.5, -0.25, 0, 0.25, 0.5, Inf),
legend.hist = FALSE, title = "Deliver Time",
palette = "RdBu") +
tm_layout(legend.outside = FALSE,
legend.outside.position = "left",
legend.title.size = 1.5,
legend.title.fontfamily = "calibri",
legend.title.fontface = "bold",
legend.text.fontfamily = "calibri",
legend.text.size = 1.1) +
tm_compass(position = c("left", "bottom"), size = 4, show.labels = 0)+
tm_scale_bar(position = c("left", "bottom"), width = 1, size = 1, breaks = c(0, 2.5, 5)) +
tm_shape(seoul_gu)+
tm_borders()
hist(access$dlv_tm_spar)
hist(access$raam_spar)
hist(access$dlv_tm_spar)
ks.test(access$access_ram, access$mean_dlv_tm)
ks.test(access$access_raam, access$mean_dlv_tm)
ks.test(access$access_sfca, access$mean_dlv_tm)
ks.test(access$sfca_spar, access$dlv_tm_spar)
ks.test(access$raam_spar, access$dlv_tm_spar)
response_sf
remove_outliers <- function(data, threshold = 1.5) {
q1 <- quantile(data, 0.25)
q3 <- quantile(data, 0.75)
iqr <- q3 - q1
lower_bound <- q1 - threshold * iqr
upper_bound <- q3 + threshold * iqr
data_filtered <- data[data >= lower_bound & data <= upper_bound]
return(data_filtered)
}
q1 <- quantile(response_sf$dlv_tm, 0.25)
q3 <- quantile(response_sf$dlv_tm, 0.75)
iqr <- q3 - q1
lower_bound <- q1 - threshold * iqr
upper_bound <- q3 + threshold * iqr
upper_bound <- q3 + 1.5 * iqr
lower_bound <- q1 - 1.5 * iqr
upper_bound
lower_bound
boxplot(response_sf$dlv_tm)
boxplot(access$mean_dlv_tm)
response_flt <- response_flt %>%
filter(dlv_tm >= -480 | dlv_tm <= 1920)
## clean response data
response_flt <- response %>%
filter(!(daywk %in% c("금요일", "토요일", "일요일"))) %>% # 평일만 선택
filter(trans_cl_nm == "이송") %>%
#filter(!is.na(hsptl_nm1)) %>% # 병원이름
filter(!is.na(spt_start_tm)) %>% # 현장 도착시간
filter(!is.na(hsptl_arvl_tm)) %>% # 병원 도착시간
filter(!is.na(gis_x_axis) & !is.na(gis_y_axis)) %>% # 현장 좌표
mutate(spt_start_time = paste0(spt_start_ymd, spt_start_tm),
hsptl_arvl_time = paste0(hsptl_arvl_ymd, hsptl_arvl_tm))%>%
mutate(spt_start_time = parse_datetime(spt_start_time, format = "%Y%m%d%H%M%S"),
hsptl_arvl_time = parse_datetime(hsptl_arvl_time, format = "%Y%m%d%H%M%S")) %>%
mutate(dlv_tm = hsptl_arvl_time - spt_start_time) # 병원도착시간 - 현장출발시각(응급처치 이후)
response_flt <- response_flt %>%
filter(dlv_tm >= -480 | dlv_tm <= 1920)
boxplot(response_flt$dlv_tm)
response_flt <- response_flt %>%
filter(dlv_tm >= -480 & dlv_tm <= 1920)
boxplot(response_flt$dlv_tm)
## create response data into sf_points
response_sf <- st_as_sf(response_flt, coords = c("gis_x_axis", "gis_y_axis"), crs = 5186) %>%
st_transform(crs = 5179)
data <- st_join(response_sf, access, join = st_within) %>%
group_by(block_code) %>%
summarise(mean_dlv_tm = mean(dlv_tm)) %>%
st_drop_geometry()
access <- left_join(access, data, by = c("block_code")) %>%
mutate(mean_dlv_tm = as.numeric(mean_dlv_tm)) %>%
mutate(dlv_tm_spar = (mean_dlv_tm / mean(mean_dlv_tm, na.rm=TRUE))-1)
## join access with dlv_tm data
access <- left_join(access, data, by = c("block_code")) %>%
mutate(mean_dlv_tm = as.numeric(mean_dlv_tm)) %>%
mutate(dlv_tm_spar = (mean_dlv_tm / mean(mean_dlv_tm, na.rm=TRUE))-1)
## join access with dlv_tm data
access <- left_join(access, data, by = c("block_code")) %>%
mutate(mean_dlv_tm = as.numeric(mean_dlv_tm)) %>%
mutate(dlv_tm_spar = (mean_dlv_tm / mean(mean_dlv_tm, na.rm=TRUE))-1)
## join access with dlv_tm data
access <- left_join(access, data, by = c("block_code")) %>%
mutate(mean_dlv_tm = as.numeric(mean_dlv_tm)) %>%
mutate(dlv_tm_spar = (mean_dlv_tm / mean(mean_dlv_tm, na.rm=TRUE))-1)
access <- read_sf("output/access_result.gpkg")
## join access with dlv_tm data
access <- left_join(access, data, by = c("block_code")) %>%
mutate(mean_dlv_tm = as.numeric(mean_dlv_tm)) %>%
mutate(dlv_tm_spar = (mean_dlv_tm / mean(mean_dlv_tm, na.rm=TRUE))-1)
plot(access$sfca_spar, access$dlv_tm_spar, xlim=c(-0.4, 0.4), ylim = c(-1, 5))
plot(access$raam_spar, access$dlv_tm_spar, xlim=c(-0.5, 0.5), ylim = c(-1, 5))
cor(access$sfca_spar, access$dlv_tm_spar, use = "complete.obs", method = c("spearman"))
cor(access$raam_spar, access$dlv_tm_spar, use = "complete.obs", method = c("spearman"))
ks.test(access$raam_spar, access$dlv_tm_spar)
ks.test(access$sfca_spar, access$dlv_tm_spar)
cor(access$sfca_spar, access$dlv_tm_spar, use = "complete.obs", method = c("pearson"))
cor(access$raam_spar, access$dlv_tm_spar, use = "complete.obs", method = c("pearson"))
cor(access$raam_spar, access$dlv_tm_spar, use = "complete.obs", method = c("spearman"))
cor(access$sfca_spar, access$dlv_tm_spar, use = "complete.obs", method = c("spearman"))
## mapping
tm_shape(access) +
tm_fill(col = "dlv_tm_spar", style = "fixed", n = 6,
breaks = c(-Inf, -0.5, -0.25, 0, 0.25, 0.5, Inf),
legend.hist = FALSE, title = "Deliver Time",
palette = "RdBu") +
tm_layout(legend.outside = FALSE,
legend.outside.position = "left",
legend.title.size = 1.5,
legend.title.fontfamily = "calibri",
legend.title.fontface = "bold",
legend.text.fontfamily = "calibri",
legend.text.size = 1.1) +
tm_compass(position = c("left", "bottom"), size = 4, show.labels = 0)+
tm_scale_bar(position = c("left", "bottom"), width = 1, size = 1, breaks = c(0, 2.5, 5)) +
tm_shape(seoul_gu)+
tm_borders()
plot(access$raam_spar, access$dlv_tm_spar)
plot(access$sfca_spar, access$dlv_tm_spar)
plot(access$raam_spar, access$dlv_tm_spar)
data_dong <- st_join(response_sf, access_dong, join = st_within) %>%
group_by(ADM_CD) %>%
summarise(mean_dlv_tm = mean(dlv_tm)) %>%
st_drop_geometry()
access_dong <- left_join(access_dong, data_dong, by = c("ADM_CD")) %>%
mutate(mean_dlv_tm = as.numeric(mean_dlv_tm)) %>%
mutate(dlv_tm_spar = (mean_dlv_tm / mean(mean_dlv_tm, na.rm=TRUE))-1)
access_dong <- read_sf("D:/05.Data/sp/emd_sgis/emd_sgis_2022_2Q.shp")
access_dong <- access_dong[grepl("^11", access_dong$ADM_CD),]
access_dong <- read_sf("D:/05.Data/sp/emd_sgis/emd_sgis_2022_2Q.shp")
access_dong <- access_dong[grepl("^11", access_dong$ADM_CD),]
access_dong <- read_sf("D:/05.Data/sp/emd_sgis/emd_sgis_2022_2Q.shp")
access_dong <- read_sf("D:/05.Data/sp/emd_sgis/emd_sgis_2022_2Q.shp")
access_dong <- access_dong[grepl("^11", access_dong$ADM_CD),]
access_dong <- left_join(access_dong, data_dong, by = c("ADM_CD")) %>%
mutate(mean_dlv_tm = as.numeric(mean_dlv_tm)) %>%
mutate(dlv_tm_spar = (mean_dlv_tm / mean(mean_dlv_tm, na.rm=TRUE))-1)
tm_shape(access_dong) +
tm_fill(col = "dlv_tm_spar", style = "fixed", n = 6,
breaks = c(-Inf, -0.5, -0.25, 0, 0.25, 0.5, Inf),
legend.hist = FALSE, title = "Deliver Time",
palette = "RdBu") +
tm_layout(legend.outside = FALSE,
legend.outside.position = "left",
legend.title.size = 1.5,
legend.title.fontfamily = "calibri",
legend.title.fontface = "bold",
legend.text.fontfamily = "calibri",
legend.text.size = 1.1) +
tm_compass(position = c("left", "bottom"), size = 4, show.labels = 0)+
tm_scale_bar(position = c("left", "bottom"), width = 1, size = 1, breaks = c(0, 2.5, 5)) +
tm_shape(seoul_gu)+
tm_borders()
plot(edcf(access$dlv_tm_spar))
plot(ecdf(access$dlv_tm_spar))
plot(ecdf(access$sfca_spar), add=T)
plot(ecdf(access$dlv_tm_spar), col = "red")
plot(ecdf(access$sfca_spar), col = "blue", add=T)
plot(ecdf(access$raam_spar), col = "green", add=T)
plot(ecdf(access$mean_dlv_tm), col = "red")
plot(ecdf(access$access_sfca), col = "blue", add=T)
## join access with dlv_tm data
access <- left_join(access, data, by = c("block_code")) %>%
mutate(mean_dlv_tm = as.numeric(mean_dlv_tm)) %>%
mutate(dlv_tm_spar = (mean_dlv_tm / mean(mean_dlv_tm, na.rm=TRUE))-1,
std_raam = (access_raam - mean(access_raam))/sd(access_raam),
std_sfca = (access_sfca - mean(access_sfca))/sd(access_sfca),
std_dlv_tm = (mean_dlv_tm - mean(mean_dlv_tm, na.rm=TRUE))/sd(mean_dlv_tm, na.rm =TRUE))
access <- read_sf("output/access_result.gpkg")
## join access with dlv_tm data
access <- left_join(access, data, by = c("block_code")) %>%
mutate(mean_dlv_tm = as.numeric(mean_dlv_tm)) %>%
mutate(dlv_tm_spar = (mean_dlv_tm / mean(mean_dlv_tm, na.rm=TRUE))-1,
std_raam = (access_raam - mean(access_raam))/sd(access_raam),
std_sfca = (access_sfca - mean(access_sfca))/sd(access_sfca),
std_dlv_tm = (mean_dlv_tm - mean(mean_dlv_tm, na.rm=TRUE))/sd(mean_dlv_tm, na.rm =TRUE))
plot(ecdf(access$std_dlv_tm), col = "red")
plot(ecdf(access$std_sfca), col = "blue", add=T)
plot(ecdf(access$std_spar), col = "green", add=T)
plot(ecdf(access$std_raam), col = "green", add=T)
ks.test(access$std_sfca, access$std_dlv_tm)
ks.test(access$std_raam, access$std_dlv_tm)
## mapping
tm_shape(access) +
tm_fill(col = "std_raam", style = "fixed", n = 6,
breaks = c(-Inf, -0.5, -0.25, 0, 0.25, 0.5, Inf),
legend.hist = FALSE, title = "Deliver Time",
palette = "RdBu") +
tm_layout(legend.outside = FALSE,
legend.outside.position = "left",
legend.title.size = 1.5,
legend.title.fontfamily = "calibri",
legend.title.fontface = "bold",
legend.text.fontfamily = "calibri",
legend.text.size = 1.1) +
tm_compass(position = c("left", "bottom"), size = 4, show.labels = 0)+
tm_scale_bar(position = c("left", "bottom"), width = 1, size = 1, breaks = c(0, 2.5, 5)) +
tm_shape(seoul_gu)+
tm_borders()
## mapping
tm_shape(access) +
tm_fill(col = "std_sfca", style = "fixed", n = 6,
breaks = c(-Inf, -0.5, -0.25, 0, 0.25, 0.5, Inf),
legend.hist = FALSE, title = "Deliver Time",
palette = "RdBu") +
tm_layout(legend.outside = FALSE,
legend.outside.position = "left",
legend.title.size = 1.5,
legend.title.fontfamily = "calibri",
legend.title.fontface = "bold",
legend.text.fontfamily = "calibri",
legend.text.size = 1.1) +
tm_compass(position = c("left", "bottom"), size = 4, show.labels = 0)+
tm_scale_bar(position = c("left", "bottom"), width = 1, size = 1, breaks = c(0, 2.5, 5)) +
tm_shape(seoul_gu)+
tm_borders()
## mapping
tm_shape(access) +
tm_fill(col = "std_dlv_tm", style = "fixed", n = 6,
breaks = c(-Inf, -0.5, -0.25, 0, 0.25, 0.5, Inf),
legend.hist = FALSE, title = "Deliver Time",
palette = "RdBu") +
tm_layout(legend.outside = FALSE,
legend.outside.position = "left",
legend.title.size = 1.5,
legend.title.fontfamily = "calibri",
legend.title.fontface = "bold",
legend.text.fontfamily = "calibri",
legend.text.size = 1.1) +
tm_compass(position = c("left", "bottom"), size = 4, show.labels = 0)+
tm_scale_bar(position = c("left", "bottom"), width = 1, size = 1, breaks = c(0, 2.5, 5)) +
tm_shape(seoul_gu)+
tm_borders()
cor(access$std_sfca, access$dlv_tm_spar, use = "complete.obs", method = c("spearman"))
cor(access$std_sfca, access$std_dlv_tm, use = "complete.obs", method = c("spearman"))
cor(access$std_sfca, access$std_dlv_tm, use = "complete.obs", method = c("pearson"))
cor(access$std_raam, access$std_dlv_tm, use = "complete.obs", method = c("spearman"))
cor(access$std_raam, access$std_dlv_tm, use = "complete.obs", method = c("pearson"))
hist(access$access_raam)
hist(access$std_raam)
hist(access$std_dlv_tm)
hist(access$std_sfca)
hist(access$std_raam)
hist(access$std_dlv_tm, add = T)
hist(access$std_sfca, add=T)
plot(ecdf(access$std_dlv_tm), col = "red")
plot(ecdf(access$std_sfca), col = "blue", add=T)
plot(ecdf(access$std_raam), col = "green", add=T)
hist(access$std_raam, density)
?hist
hist(access$std_raam, density = TRUE)
kde(access$std_raam)
hist(access$std_raam)
lines(density(access$std_raam), col = "red")
density(access$std_raam), col = "red")
density(access$std_raam)
hist(access$std_raam)
density(access$std_raam)
lines(density(access$std_raam))
hist(access$std_raam, freq = F)
lines(density(access$std_raam))
hist(access$std_raam)
lines(density(access$std_raam))
hist(access$std_raam)
lines(density(access$std_raam))
hist(access$std_raam, freq = FALSE)
lines(density(access$std_raam))
lines(density(access$std_dlv_tm))
hist(access$std_dlv_tm, freq = FALSE)
lines(density(access$std_dlv_tm))
lines(density(access$std_dlv_tm, na.rm=TRUE)）
lines(density(access$std_dlv_tm, na.rm=ＴＲＵＥ）
lines(density(access$std_dlv_tm, na.rm ＝Ｔ）
source("D:/Analysis/EMS_access/validation.R", echo=TRUE)
hist(access$std_dlv_tm, freq = FALSE)
hist(access$std_sfca, add=T)
hist(access$std_raam, freq = FALSE)
lines(density(access$std_raam))
cor(access$std_sfca, access$std_dlv_tm, use = "complete.obs", method = c("pearson"))
cor(access$std_raam, access$std_dlv_tm, use = "complete.obs", method = c("pearson"))
plot(ecdf(access$std_dlv_tm), col = "red")
plot(ecdf(access$std_sfca), col = "blue", add=T)
plot(ecdf(access$std_raam), col = "green", add=T)
ks.test(access$std_sfca, access$std_dlv_tm)
ks.test(access$std_sfca, access$std_dlv_tm)
ks.test(access$std_raam, access$std_dlv_tm)
plot(ecdf(access$std_dlv_tm), col = "red",
main = "Empirical cumulative density curve",
xlab = "standardized accessibility scores", ylab = "Cumulative Probability")
plot(ecdf(access$std_sfca), col = "blue", add=T)
plot(ecdf(access$std_raam), col = "green", add=T)
legend("bottomright", legend = c("Scene-to-hospital travel time", "SFCA", "RAAM"),
col = c("red", "blue", "green"), lty = 1)
## mapping
tm_shape(access) +
tm_fill(col = "dlv_tm_spar", style = "fixed", n = 6,
breaks = c(-Inf, -0.5, -0.25, 0, 0.25, 0.5, Inf),
legend.hist = FALSE, title = "Deliver Time",
palette = "RdBu") +
tm_layout(legend.outside = FALSE,
legend.outside.position = "left",
legend.title.size = 1.5,
legend.title.fontfamily = "calibri",
legend.title.fontface = "bold",
legend.text.fontfamily = "calibri",
legend.text.size = 1.1) +
tm_compass(position = c("left", "bottom"), size = 4, show.labels = 0)+
tm_scale_bar(position = c("left", "bottom"), width = 1, size = 1, breaks = c(0, 2.5, 5)) +
tm_shape(seoul_gu)+
tm_borders()
tm_shape(access_dong) +
tm_fill(col = "dlv_tm_spar", style = "fixed", n = 6,
breaks = c(-Inf, -0.5, -0.25, 0, 0.25, 0.5, Inf),
legend.hist = FALSE, title = "Deliver Time",
palette = "RdBu") +
tm_layout(legend.outside = FALSE,
legend.outside.position = "left",
legend.title.size = 1.5,
legend.title.fontfamily = "calibri",
legend.title.fontface = "bold",
legend.text.fontfamily = "calibri",
legend.text.size = 1.1) +
tm_compass(position = c("left", "bottom"), size = 4, show.labels = 0)+
tm_scale_bar(position = c("left", "bottom"), width = 1, size = 1, breaks = c(0, 2.5, 5)) +
tm_shape(seoul_gu)+
tm_borders()
cor(access$std_sfca, access$std_dlv_tm, use = "complete.obs", method = c("pearson"))
cor(access$std_raam, access$std_dlv_tm, use = "complete.obs", method = c("pearson"))
cor(access$sfca_spar, access$dlv_tm_spar = "complete.obs", method = c("pearson"))
cor(access$sfca_spar, access$dlv_tm_spar, use = "complete.obs", method = c("pearson"))
cor(access$raam_spar, access$dlv_tm_spar, use = "complete.obs", method = c("pearson"))
cor(access$sfca_spar, access$dlv_tm_spar, use = "complete.obs", method = c("spearman"))
cor(access$raam_spar, access$dlv_tm_spar, use = "complete.obs", method = c("spearman"))
boxplot(access$std_sfca, access$std_raam, access$std_dlv_tm)
1920/60
library(tidyverse)
library(sf)
library(tmap)
library(extrafont)
# Set working directory
path_wd <- dirname(rstudioapi::getSourceEditorContext()$path)
setwd(path_wd)
# Set working directory
path_wd <- dirname(rstudioapi::getSourceEditorContext()$path)
setwd(path_wd)
# Set working directory
path_wd <- dirname(rstudioapi::getSourceEditorContext()$path)
# Set working directory
path_wd <- dirname(rstudioapi::getSourceEditorContext()$path)
setwd(path_wd)
# load data
sejong <- read_sf("data/grid_sejong.gpkg")
access <- read_csv("data/accessibility.csv")
access <- read_csv("data/accessibility.csv")
sejong <- left_join(sejong, access, by = c("SPO_NO_CD" = "demand_id"))
## mapping
tm_shape(sejong) +
tm_fill(col = "spar", style = "fixed", n = 6,
breaks = c(-Inf, -0.5, -0.25, 0, 0.25, 0.5, Inf),
legend.hist = FALSE, title = "Accessibility (SPAR)",
palette = "RdBu") +
tm_layout(legend.outside = FALSE,
legend.outside.position = "left",
legend.title.size = 1.5,
legend.title.fontfamily = "calibri",
legend.title.fontface = "bold",
legend.text.fontfamily = "calibri",
legend.text.size = 1.1) +
tm_compass(position = c("left", "bottom"), size = 4, show.labels = 0)+
tm_scale_bar(position = c("left", "bottom"), width = 1, size = 1, breaks = c(0, 2.5, 5)) +
#tm_shape(seoul_gu)+
tm_borders()
install.packages("extrafont")
# load fonts: 한번만 실행
font_import()
library(extrafont)
# load fonts: 한번만 실행
font_import()
# load fonts: 한번만 실행
font_import()
loadfonts()
## mapping
tm_shape(sejong) +
tm_fill(col = "spar", style = "fixed", n = 6,
breaks = c(-Inf, -0.5, -0.25, 0, 0.25, 0.5, Inf),
legend.hist = FALSE, title = "Accessibility (SPAR)",
palette = "RdBu") +
tm_layout(legend.outside = FALSE,
legend.outside.position = "left",
legend.title.size = 1.5,
legend.title.fontfamily = "calibri",
legend.title.fontface = "bold",
legend.text.fontfamily = "calibri",
legend.text.size = 1.1) +
tm_compass(position = c("left", "bottom"), size = 4, show.labels = 0)+
tm_scale_bar(position = c("left", "bottom"), width = 1, size = 1, breaks = c(0, 2.5, 5)) +
#tm_shape(seoul_gu)+
tm_borders()
## mapping
tm_shape(sejong) +
tm_fill(col = "spar", style = "fixed", n = 6,
breaks = c(-Inf, -0.5, -0.25, 0, 0.25, 0.5, Inf),
legend.hist = FALSE, title = "Accessibility (SPAR)",
palette = "RdBu") +
tm_layout(legend.outside = FALSE,
legend.outside.position = "left",
legend.title.size = 1.5,
legend.title.fontfamily = "Arial",
legend.title.fontface = "bold",
legend.text.fontfamily = "Arial",
legend.text.size = 1.1) +
tm_compass(position = c("left", "bottom"), size = 4, show.labels = 0)+
tm_scale_bar(position = c("left", "bottom"), width = 1, size = 1, breaks = c(0, 2.5, 5)) +
#tm_shape(seoul_gu)+
tm_borders()
## mapping
tm_shape(sejong) +
tm_fill(col = "spar", style = "fixed", n = 6,
breaks = c(-Inf, -0.5, -0.25, 0, 0.25, 0.5, Inf),
legend.hist = FALSE, title = "Accessibility (SPAR)",
palette = "-RdBu") +
tm_layout(legend.outside = FALSE,
legend.outside.position = "left",
legend.title.size = 1.5,
legend.title.fontfamily = "Arial",
legend.title.fontface = "bold",
legend.text.fontfamily = "Arial",
legend.text.size = 1.1) +
tm_compass(position = c("left", "bottom"), size = 4, show.labels = 0)+
tm_scale_bar(position = c("left", "bottom"), width = 1, size = 1, breaks = c(0, 2.5, 5)) +
#tm_shape(seoul_gu)+
tm_borders()
# load data
sejong <- read_sf("data/grid_sejong.gpkg")
access <- read_csv("data/accessibility.csv")
sejong <- left_join(sejong, access, by = c("SPO_NO_CD" = "demand_id"))
## mapping
tm_shape(sejong) +
tm_fill(col = "spar", style = "fixed", n = 6,
breaks = c(-Inf, -0.5, -0.25, 0, 0.25, 0.5, Inf),
legend.hist = FALSE, title = "Accessibility (SPAR)",
palette = "-RdBu") +
tm_layout(legend.outside = FALSE,
legend.outside.position = "left",
legend.title.size = 1.5,
legend.title.fontfamily = "Arial",
legend.title.fontface = "bold",
legend.text.fontfamily = "Arial",
legend.text.size = 1.1) +
tm_compass(position = c("left", "bottom"), size = 4, show.labels = 0)+
tm_scale_bar(position = c("left", "bottom"), width = 1, size = 1, breaks = c(0, 2.5, 5)) +
#tm_shape(seoul_gu)+
tm_borders()
## mapping
tm_shape(sejong) +
tm_fill(col = "spar", style = "fixed", n = 6,
breaks = c(-Inf, -0.5, -0.25, 0, 0.25, 0.5, Inf),
legend.hist = FALSE, title = "Accessibility (SPAR)",
palette = "-RdBu") +
tm_layout(legend.outside = FALSE,
legend.outside.position = "right",
legend.title.size = 1.5,
legend.title.fontfamily = "Arial",
legend.title.fontface = "bold",
legend.text.fontfamily = "Arial",
legend.text.size = 1.1) +
tm_compass(position = c("left", "bottom"), size = 4, show.labels = 0)+
tm_scale_bar(position = c("left", "bottom"), width = 1, size = 1, breaks = c(0, 2.5, 5)) +
#tm_shape(seoul_gu)+
tm_borders()
## mapping
tm_shape(sejong) +
tm_fill(col = "spar", style = "fixed", n = 6,
breaks = c(-Inf, -0.5, -0.25, 0, 0.25, 0.5, Inf),
legend.hist = FALSE, title = "Accessibility (SPAR)",
palette = "-RdBu") +
tm_layout(legend.outside = TRUE,
legend.outside.position = "right",
legend.title.size = 1.5,
legend.title.fontfamily = "Arial",
legend.title.fontface = "bold",
legend.text.fontfamily = "Arial",
legend.text.size = 1.1) +
tm_compass(position = c("left", "bottom"), size = 4, show.labels = 0)+
tm_scale_bar(position = c("left", "bottom"), width = 1, size = 1, breaks = c(0, 2.5, 5)) +
#tm_shape(seoul_gu)+
tm_borders()
## mapping
tm_shape(sejong) +
tm_fill(col = "spar", style = "fixed", n = 6,
breaks = c(-Inf, -0.5, -0.25, 0, 0.25, 0.5, Inf),
legend.hist = FALSE, title = "Accessibility (SPAR)",
palette = "-RdBu") +
tm_layout(legend.outside = FALSE,
legend.outside.position = "right",
legend.title.size = 1.5,
legend.title.fontfamily = "Arial",
legend.title.fontface = "bold",
legend.text.fontfamily = "Arial",
legend.text.size = 1.1) +
tm_compass(position = c("left", "bottom"), size = 4, show.labels = 0)+
tm_scale_bar(position = c("left", "bottom"), width = 1, size = 1, breaks = c(0, 2.5, 5)) +
#tm_shape(seoul_gu)+
tm_borders()
